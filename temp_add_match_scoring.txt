
      // Calculate match scores if user is authenticated
      try {
        const { data: { user } } = await supabase.auth.getUser()
        
        if (user) {
          // Get candidate profile for match scoring
          const { data: candidateProfile } = await supabase
            .from('candidate_profiles')
            .select('*')
            .eq('candidate_id', user.id)
            .single()
          
          if (candidateProfile) {
            // Calculate match scores for each job
            jobsWithScores = await Promise.all(
              jobsWithScores.map(async (job: any) => {
                try {
                  const matchScore = await calculateJobMatchScore(job, candidateProfile)
                  return {
                    ...job,
                    match_score: matchScore
                  }
                } catch (error) {
                  console.error('Error calculating match score for job:', job.id, error)
                  return job // Keep original score
                }
              })
            )
          }
        }
      } catch (authError) {
        // User not authenticated or other auth error, continue without match scores
        console.log('No authenticated user for match scoring')
      }